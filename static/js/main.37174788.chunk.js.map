{"version":3,"sources":["actions/index.js","App.js","reportWebVitals.js","reducer/dataEnter.js","axios/index.js","selectors/index.js","sagas/callMethodsLogRegCreate.js","sagas/index.js","index.js"],"names":["loginRequest","createAction","App","props","changeTextOne","e","setState","value","target","changeTextTwo","text","testMethod","hundleOpenClose","openClose","state","setTimeout","window","scroll","left","top","current","offsetTop","behavior","console","log","refText","createRef","this","className","Button","onClick","onChange","type","name","placeholder","htmlFor","ref","React","Component","connect","dispatch","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","dataReducer","handleActions","action","payload","initialState","axiosForLoginAndRegistration","url","method","axios","loginSelector","createSelector","item","select","a","call","user","mySagaGeneric","mySagaAll","rootSaga","methodName","lodash","camelCase","request","callMethods","takeEvery","test","all","saga","createSagaMiddleware","rootReducer","combineReducers","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UAEaA,EAAeC,YAAa,iB,GACbA,YAAa,iBAChBA,YAAa,c,MCEhCC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAQRC,cAAgB,SAACC,GACf,EAAKC,SAAS,CACZC,MAAOF,EAAEG,OAAOD,SAXD,EAcnBE,cAAgB,SAACJ,GACf,EAAKC,SAAS,CACZI,KAAML,EAAEG,OAAOD,SAhBA,EAmBnBI,WAAa,WACX,EAAKR,MAAMH,aAAa,QApBP,EAsBnBY,gBAAkB,SAACP,GACjB,EAAKC,SAAS,CACZO,WAAY,EAAKC,MAAMD,YAEzBE,YAAW,WACTC,OAAOC,OAAO,CACZC,KAAM,EACNC,IAAKd,EAAEe,QAAQC,UACfC,SAAU,aAEX,KACHC,QAAQC,IAAInB,IA/BZ,EAAKoB,QAAUC,sBACf,EAAKZ,MAAQ,CACXP,MAAO,GACPG,KAAM,GACNG,WAAW,GANI,E,0CAoCnB,WAAU,IAAD,OAEP,OADAU,QAAQC,IAAIG,KAAKxB,MAAO,WAEtB,sBAAKyB,UAAU,OAAf,UACE,sBAAKA,UAAU,MAAf,UACE,cAACC,EAAA,EAAD,CACEC,QAAS,SAACzB,GACR,EAAKO,gBAAgB,EAAKa,UAF9B,+BAOA,cAACI,EAAA,EAAD,CAAQC,QAASH,KAAKhB,WAAtB,iBACA,uBAAMiB,UAAU,OAAhB,UACE,sBAAKA,UAAU,YAAf,UACE,uBACEG,SAAU,SAAC1B,GACT,EAAKD,cAAcC,IAErBuB,UAAU,cACVI,KAAK,OACLC,KAAK,MACLC,YAAY,wEAEd,uBAAON,UAAU,cAAcO,QAAQ,MAAvC,yDAIF,sBAAKP,UAAU,YAAf,UACE,uBACEG,SAAU,SAAC1B,GACT,EAAKI,cAAcJ,IAErB2B,KAAK,OACLC,KAAK,MACLC,YAAY,sEACZN,UAAU,gBAEZ,uBAAOA,UAAU,cAAcO,QAAQ,MAAvC,+DAMN,sBACEP,UACED,KAAKb,MAAMD,UAAY,gBAAkB,qBAF7C,UAKE,mBAAGe,UAAU,QAAQQ,IAAKT,KAAKF,QAA/B,SACGE,KAAKb,MAAMP,QAEd,mBAAGqB,UAAU,QAAb,SAAsBD,KAAKb,MAAMJ,iB,GAzFzB2B,IAAMC,WAwGTC,eARS,SAACzB,GACvB,MAAO,CAACA,YAEiB,SAAC0B,GAC1B,MAAO,CACLxC,aAAc,SAACO,GAAD,OAAWiC,EAASxC,EAAaO,QAGpCgC,CAA6CrC,G,QClG7CuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCGCQ,EAPKC,YAAc,eAE7BC,GAAsB,SAACtC,EAAOsC,GAAR,OAAmBA,EAAOC,WAEnD,CAAEC,aALiB,K,0DCCd,SAASC,EAA6BC,EAAKC,GAC9C,OAAOC,IAAM,CACXF,MACAC,W,YCFOE,EAAiBC,aAFJ,SAAA9C,GAAK,OAAIA,EAAMoC,eAIrC,SAAAW,GAAI,OAAIA,K,WCAK7D,GAAV,SAAUA,EAAaqD,GAAvB,yEAEK,OADV9B,QAAQC,IAAI,gBADP,SAEWsC,YAAQH,GAFnB,OAIQ,OAFPI,EAFD,OAGLxC,QAAQC,IAAIuC,GAHP,SAIcC,YAAKT,EAA8B,+CAAiD,OAJlG,OAICU,EAJD,OAKL1C,QAAQC,IAAIyC,GALP,uC,eCDUC,G,WASAC,G,WAIAC,GAbV,SAAUF,EAAcd,GAAxB,6EAML,OALQC,EAAkBD,EAAlBC,QAASrB,EAASoB,EAATpB,KACjBT,QAAQC,IAAI6B,EAAS,WACrB9B,QAAQC,IAAIQ,EAAM,QACZqC,EAAaC,IAAOC,UAAUvC,GAC9BwC,EAAUC,EAAYJ,GAAYhB,GALnC,SAMCmB,EAND,uCASA,SAAUL,EAAUf,GAApB,iEACL,OADK,SACCsB,aAAU,gBAAG1C,EAAH,EAAGA,KAAH,MAAc,aAAa2C,KAAK3C,KAAOkC,GADlD,uCAIA,SAAUE,IAAV,iEACL,OADK,SACCQ,YAAI,CAACT,MADN,uCCPP,IAAMU,EAAOC,cAEPC,EAAcC,YAAgB,CAClC9B,gBAGI+B,EAAQC,YAAYH,EAAaI,YAAgBN,IACvDA,EAAKO,IAAIhB,GACTiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,SAM1BhD,M","file":"static/js/main.37174788.chunk.js","sourcesContent":["import { createAction } from \"redux-actions\";\n\nexport const loginRequest = createAction(\"LOGIN_REQUEST\");\nexport const loginSuccess = createAction(\"LOGIN_SUCCESS\");\nexport const loginFail = createAction(\"LOGIN_FAIL\");\n","import { Button } from \"@material-ui/core\";\nimport React, { createRef } from \"react\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport { loginRequest } from \"./actions/index\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.refText = createRef();\n    this.state = {\n      value: \"\",\n      text: \"\",\n      openClose: false,\n    };\n  }\n  changeTextOne = (e) => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n  changeTextTwo = (e) => {\n    this.setState({\n      text: e.target.value,\n    });\n  };\n  testMethod = () => {\n    this.props.loginRequest(\"asd\");\n  };\n  hundleOpenClose = (e) => {\n    this.setState({\n      openClose: !this.state.openClose,\n    });\n    setTimeout(() => {\n      window.scroll({\n        left: 0,\n        top: e.current.offsetTop,\n        behavior: \"smooth\",\n      });\n    }, 100);\n    console.log(e);\n  };\n  handleSu;\n  render() {\n    console.log(this.props, 'fbdfbfd');\n    return (\n      <div className=\"main\">\n        <div className=\"App\">\n          <Button\n            onClick={(e) => {\n              this.hundleOpenClose(this.refText);\n            }}\n          >\n            Click my and look\n          </Button>\n          <Button onClick={this.testMethod}>asd</Button>\n          <form className=\"form\">\n            <div className=\"form__box\">\n              <input\n                onChange={(e) => {\n                  this.changeTextOne(e);\n                }}\n                className=\"form__input\"\n                type=\"text\"\n                name=\"one\"\n                placeholder=\"Заполни поле\"\n              />\n              <label className=\"form__label\" htmlFor=\"one\">\n                Тестим REF\n              </label>\n            </div>\n            <div className=\"form__box\">\n              <input\n                onChange={(e) => {\n                  this.changeTextTwo(e);\n                }}\n                type=\"text\"\n                name=\"two\"\n                placeholder=\"Заполни поле\"\n                className=\"form__input\"\n              />\n              <label className=\"form__label\" htmlFor=\"two\">\n                Тестим REF\n              </label>\n            </div>\n          </form>\n        </div>\n        <div\n          className={\n            this.state.openClose ? \"testAnimation\" : \"testAnimation show\"\n          }\n        >\n          <p className=\"title\" ref={this.refText}>\n            {this.state.value}\n          </p>\n          <p className=\"title\">{this.state.text}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {state};\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loginRequest: (value) => dispatch(loginRequest(value)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { handleActions } from \"redux-actions\";\nimport * as action from \"../actions/index\";\nconst initialState = [];\nconst dataReducer = handleActions(\n  {\n    [action.loginRequest]: (state, action) => action.payload,\n  },\n  { initialState }\n);\n\nexport default dataReducer;\n","import axios from 'axios';\n\n\nexport function axiosForLoginAndRegistration(url, method) {\n    return axios({\n      url,\n      method,\n  \n    });\n  }\n\n","import { createSelector } from 'reselect';\n\nconst loginDataSelector = state => state.dataReducer;\n\nexport const loginSelector  = createSelector(\n    loginDataSelector,\n    item => item\n  );\n\n  ","import {axiosForLoginAndRegistration }from '../axios';\nimport { call, select } from 'redux-saga/effects';\nimport {loginSelector} from '../selectors/index'\n\n\n\nexport function* loginRequest(payload) {\n  console.log(\"hellow world\");\n  const a = yield select (loginSelector);\n  console.log(a);\n  const user = yield call(axiosForLoginAndRegistration, 'https://test-todoist.herokuapp.com/api/tasks',  'get');\n  console.log(user);\n}\n\n","import { takeEvery, all } from \"redux-saga/effects\";\nimport lodash from \"lodash\";\nimport * as callMethods from \"./callMethodsLogRegCreate\";\n\n\nexport function* mySagaGeneric(action) {\n  const { payload, type } = action;\n  console.log(payload, \"PAYLOAD\");\n  console.log(type, \"TYPE\");\n  const methodName = lodash.camelCase(type);\n  const request = callMethods[methodName](payload);\n  yield request;\n}\n\nexport function* mySagaAll(action) {\n  yield takeEvery(({ type }) => /_REQUEST$/g.test(type), mySagaGeneric);\n}\n\nexport function* rootSaga() {\n  yield all([mySagaAll()]);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport dataReducer from \"./reducer/dataEnter\";\nimport { rootSaga } from \"./sagas/index\";\n\nconst saga = createSagaMiddleware();\n\nconst rootReducer = combineReducers({\n  dataReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(saga));\nsaga.run(rootSaga);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}